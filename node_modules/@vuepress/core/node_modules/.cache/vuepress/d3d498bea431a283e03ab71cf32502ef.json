{"remainingRequest":"/Users/luna/vue-blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/luna/vue-blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/luna/vue-blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/luna/vue-blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/luna/vue-blog/docs/blog/spring security.md?vue&type=template&id=dc4a77be&","dependencies":[{"path":"/Users/luna/vue-blog/docs/blog/spring security.md","mtime":1618733001273},{"path":"/Users/luna/vue-blog/node_modules/cache-loader/dist/cjs.js","mtime":1622518572085},{"path":"/Users/luna/vue-blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1622518574150},{"path":"/Users/luna/vue-blog/node_modules/cache-loader/dist/cjs.js","mtime":1622518572085},{"path":"/Users/luna/vue-blog/node_modules/vue-loader/lib/index.js","mtime":1622518574150},{"path":"/Users/luna/vue-blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1622518607775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ContentSlotsDistributor",
    { attrs: { "slot-key": _vm.$parent.slotKey } },
    [
      _c("article", { staticClass: "baidu_pl" }, [
        _c(
          "div",
          {
            staticClass: "article_content clearfix",
            attrs: { id: "article_content" }
          },
          [
            _c("link", {
              attrs: {
                rel: "stylesheet",
                href:
                  "https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-a405391f94.css"
              }
            }),
            _vm._v(" "),
            _c(
              "div",
              { staticClass: "htmledit_views", attrs: { id: "content_views" } },
              [
                _c("p", [_c("strong", [_vm._v("生活加油:摘一句子:")])]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v(
                      "“我希望自己能写这样的诗。我希望自己也是一颗星星。如果我会发光，就不必害怕黑暗。如果我自己是那么美好，那么一切恐惧就可以烟消云散。于是我开始存下了一点希望—如果我能做到，那么我就战胜了寂寞的命运。”"
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _vm._v(
                    "                                                                                 -----------------------------王小波《我在荒岛上迎接黎明》"
                  )
                ]),
                _vm._v(" "),
                _c("h1", [
                  _c("a", { attrs: { name: "t0" } }),
                  _c("a", { attrs: { name: "t0" } }),
                  _vm._v("初步嘗試一下：")
                ]),
                _vm._v(" "),
                _c("p", [_c("strong", [_vm._v("新建项目,导入依赖")])]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c("ol", { staticClass: "hljs-ln" }, [
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "1" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("package")
                            ]),
                            _vm._v(" com.liruilong;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "2" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "3" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.web.bind.annotation.GetMapping;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "4" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "5" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.web.bind.annotation.RestController;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "6" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "7" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "8" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" : security学习")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "9" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(": Liruilong")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "10" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(": 2019/12/24 12:54")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "11" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" */")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "12" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@RestController")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "13" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("HollerController")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "14" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v('@GetMapping("/hello")')
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "15" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("hello")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "16" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"hello Security"')
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "17" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "18" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("}")
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v(
                      "访问接口:请求都被保护起来,用户名默认user,密码为控制台打印的字符串."
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("img", {
                    staticClass: "has",
                    attrs: {
                      alt: "",
                      height: "336",
                      src:
                        "https://img-blog.csdnimg.cn/2019122413045146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                      width: "801"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("img", {
                    staticClass: "has",
                    attrs: {
                      alt: "",
                      height: "279",
                      src:
                        "https://img-blog.csdnimg.cn/20191224130732495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                      width: "747"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [_c("strong", [_vm._v(" 手工配置用户名和密码:")])]),
                _vm._v(" "),
                _c("p", [_vm._v("一,配置类方式:")]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c("ol", { staticClass: "hljs-ln" }, [
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "1" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("package")
                            ]),
                            _vm._v(" com.liruilong.securityl.demo;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "2" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "3" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.context.annotation.Bean;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "4" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.context.annotation.Configuration;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "5" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "6" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.config.annotation.web.builders.HttpSecurity;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "7" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "8" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.crypto.password.NoOpPasswordEncoder;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "9" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.crypto.password.PasswordEncoder;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "10" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "11" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "12" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" : security配置")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "13" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(": Liruilong")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "14" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(": 2019/12/24 13:13")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "15" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" */")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "16" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Configuration")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "17" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("config")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("extends")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("WebSecurityConfigurerAdapter")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "18" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "19" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "20" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(" Liruilong ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "21" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" 密码处理,告诉系统不加密访问")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "22" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(" 13:20 2019/12/24")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "23" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Param")
                              ]),
                              _vm._v(" [] ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "24" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@return")
                              ]),
                              _vm._v(
                                " org.springframework.security.crypto.password.PasswordEncoder "
                              )
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "25" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     **/")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "26" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "27" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Bean")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "28" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _vm._v("PasswordEncoder "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("passwordEncoder")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "29" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" NoOpPasswordEncoder.getInstance();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "30" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "31" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "32" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "33" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(" Liruilong ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "34" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" 配置用户名密码.密码必须加密")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "35" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(" 13:16 2019/12/24")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "36" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Param")
                              ]),
                              _vm._v(" [auth] ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "37" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@return")
                              ]),
                              _vm._v(" void ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "38" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     **/")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "39" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "40" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "41" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("protected")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("configure")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(AuthenticationManagerBuilder auth)")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(" Exception ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "42" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        auth.inMemoryAuthentication()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "43" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .withUser("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"liruilong"')
                            ]),
                            _vm._v(").password("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"123"')
                            ]),
                            _vm._v(").roles("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"admin"')
                            ]),
                            _vm._v(")")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "44" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .and()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "45" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .withUser("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"liruilongs"')
                            ]),
                            _vm._v(").password("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"123"')
                            ]),
                            _vm._v(").roles("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"user"')
                            ]),
                            _vm._v(");")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "46" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "47" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "48" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "49" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("}")
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [_c("strong", [_vm._v("配置文件方式:")])]),
                _vm._v(" "),
                _c("p", [
                  _c("img", {
                    staticClass: "has",
                    attrs: {
                      alt: "",
                      height: "169",
                      src: "https://img-blog.csdnimg.cn/2019122413304389.png",
                      width: "523"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [_vm._v(" ")]),
                _vm._v(" "),
                _c("h2", [
                  _c("a", { attrs: { name: "t1" } }),
                  _c("a", { attrs: { name: "t1" } }),
                  _vm._v("HttpScurity的简单配置:")
                ]),
                _vm._v(" "),
                _c("div", [
                  _c("strong", [
                    _c("span", { staticStyle: { color: "#434343" } }, [
                      _vm._v("基于内存的认证，")
                    ]),
                    _c("span", { staticStyle: { color: "#5b5b5b" } }, [
                      _vm._v("以自定义类继承自 w")
                    ]),
                    _c("span", { staticStyle: { color: "#434343" } }, [
                      _vm._v("ebSecurityConfigurerAdapter ")
                    ]),
                    _c("span", { staticStyle: { color: "#434343" } }, [
                      _vm._v("，进行自定义配置。")
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c("ol", { staticClass: "hljs-ln" }, [
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "1" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("package")
                            ]),
                            _vm._v(" com.liruilong.securityl.demo;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "2" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "3" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "4" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "5" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" : security配置")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "6" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(": Liruilong")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "7" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(": 2019/12/24 13:13")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "8" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" */")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "9" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Configuration")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "10" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("config")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("extends")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("WebSecurityConfigurerAdapter")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "11" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "12" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "13" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(" Liruilong ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "14" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" 密码处理,告诉系统不加密访问")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "15" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(" 13:20 2019/12/24")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "16" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Param")
                              ]),
                              _vm._v(" [] ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "17" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@return")
                              ]),
                              _vm._v(
                                " org.springframework.security.crypto.password.PasswordEncoder "
                              )
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "18" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     **/")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "19" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "20" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Bean")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "21" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _vm._v("PasswordEncoder "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("passwordEncoder")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "22" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" NoOpPasswordEncoder.getInstance();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "23" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "24" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "25" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "26" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(" Liruilong ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "27" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" 配置用户名密码.密码必须加密")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "28" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(" 13:16 2019/12/24")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "29" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Param")
                              ]),
                              _vm._v(" [auth] ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "30" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@return")
                              ]),
                              _vm._v(" void ")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "31" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     **/")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "32" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "33" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "34" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("protected")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("configure")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(AuthenticationManagerBuilder auth)")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(" Exception ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "35" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        auth.inMemoryAuthentication()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "36" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .withUser("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"liruilong"')
                            ]),
                            _vm._v(").password("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"123"')
                            ]),
                            _vm._v(").roles("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"admin"')
                            ]),
                            _vm._v(")")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "37" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .and()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "38" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .withUser("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"liruilongs"')
                            ]),
                            _vm._v(").password("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"123"')
                            ]),
                            _vm._v(").roles("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"user"')
                            ]),
                            _vm._v(");")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "39" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "40" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "41" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "42" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "43" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("protected")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("configure")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(HttpSecurity http)")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(" Exception ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "44" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("//开启配置，开启 HtψSecurity 的配直")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "45" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        http.authorizeRequests()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "46" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("// 指定admin角色可以访问该路径")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "47" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .antMatchers("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"/admin/**"')
                            ]),
                            _vm._v(").hasRole("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"admin"')
                            ]),
                            _vm._v(")")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "48" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("// 指定admin和user可以访问该路径")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "49" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .antMatchers("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"/user/**"')
                            ]),
                            _vm._v(").hasAnyRole("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"admin"')
                            ]),
                            _vm._v(", "),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"user"')
                            ]),
                            _vm._v(")")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "50" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("// 剩下的请求登录之后就可以访问")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "51" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "                .anyRequest().authenticated()"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "52" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .and()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "53" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("// 表单登录的url,请求地址")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "54" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .formLogin()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "55" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .loginProcessingUrl("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"/dolog"')
                            ]),
                            _vm._v(")")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "56" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .permitAll()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "57" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .and()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "58" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("// 关闭csrf")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "59" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .csrf().disable();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "60" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "61" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "62" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("}")
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("h3", [
                  _c("a", { attrs: { name: "t2" } }),
                  _c("a", { attrs: { name: "t2" } }),
                  _vm._v("表单登录的详细配置:")
                ]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c(
                      "ol",
                      {
                        staticClass: "hljs-ln",
                        staticStyle: { width: "1652px" }
                      },
                      [
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "1" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "2" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "3" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "4" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("protected")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("configure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(HttpSecurity http)")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" Exception ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "5" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//开启配置")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "6" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        http.authorizeRequests()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "7" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 指定admin角色可以访问该路径")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "8" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .antMatchers("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/admin/**"')
                              ]),
                              _vm._v(").hasRole("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"admin"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "9" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 指定admin和user可以访问该路径")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "10" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .antMatchers("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/user/**"')
                              ]),
                              _vm._v(").hasAnyRole("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"admin"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"user"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "11" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 剩下的请求登录之后就可以访问")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "12" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                .anyRequest().authenticated()"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "13" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .and()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "14" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 表单登录的url,请求地址")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "15" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .formLogin()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "16" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// url,请求地址")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "17" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .loginProcessingUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/dolog"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "18" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 登录页面")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "19" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .loginPage("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"login"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "20" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "// 修改默认的键,默认为username和password"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "21" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .usernameParameter("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"uname"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "22" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .passwordParameter("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"passwd"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "23" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 前后端分离,登录成功的处理")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "24" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .successHandler("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" AuthenticationSuccessHandler() {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "25" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "26" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("onAuthenticationSuccess")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v(
                                    "(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication)"
                                  )
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" IOException, ServletException ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "27" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "//authentication里保存了登录成功的用户信息"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "28" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        httpServletResponse.setContentType("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"application/json;charset=utf-8"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "29" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        PrintWriter out = httpServletResponse.getWriter();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "30" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        Map<String, Object> map = "
                              ),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" HashMap<>();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "31" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"status"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-number" }, [
                                _vm._v("200")
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "32" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 登录成功的用户信息")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "33" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"mes"')
                              ]),
                              _vm._v(", authentication.getPrincipal());")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "34" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 返回一个json")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "35" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.write("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(
                                " ObjectMapper().writeValueAsString(map));"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "36" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.flush();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "37" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.close();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "38" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "39" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                })")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "40" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                 "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//前后端不分,页面跳转")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "41" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .successForwardUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"成功跳转"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "42" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//登录失败的处理")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "43" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .failureHandler("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" AuthenticationFailureHandler() {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "44" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "45" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("onAuthenticationFailure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v(
                                    "(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, AuthenticationException e)"
                                  )
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" IOException, ServletException ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "46" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        httpServletResponse.setContentType("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"application/json;charset=utf-8"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "47" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        PrintWriter out = httpServletResponse.getWriter();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "48" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        Map<String, Object> map = "
                              ),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" HashMap<>();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "49" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"status"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-number" }, [
                                _vm._v("401")
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "50" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" (e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" LockedException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "51" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"账户被锁定请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "52" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }"),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v("(e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" CredentialsExpiredException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "53" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"密码过期请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "54" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }"),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" (e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" AccountExpiredException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "55" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"账户过期请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "56" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }"),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v("(e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" DisabledException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "57" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"账户被禁用请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "58" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }"),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" (e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" BadCredentialsException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "59" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"用户名密码输入错误,请重新输入!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "60" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "61" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.write("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(
                                " ObjectMapper().writeValueAsString(map));"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "62" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.flush();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "63" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.close();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "64" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "65" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                })")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "66" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 前后端不分跳转")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "67" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .failureForwardUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"失败跳转"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "68" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .permitAll()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "69" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .and()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "70" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 关闭csrf")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "71" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .csrf().disable();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "72" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "73" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "74" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "75" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "76" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("}")
                            ])
                          ])
                        ])
                      ]
                    )
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [
                  _vm._v(" "),
                  _c("strong", [
                    _vm._v(
                      '登录接口为 "/login”，即可以直接调用“／login”接口，发起一个 POST 请求进行登录，登录参数中用户 名必须命名为 usemam巳，密码必须命名为 password，配置了 loginProcessingUrl 接口主要方便或者移动端调用登录接口 。最后还配置了 permitAll，表示和登录相关的接口都不需要认 证即可访问。 '
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v("anonymous() 允许匿名用户访问"),
                    _c("br"),
                    _vm._v(" permitAll() 无条件允许访问")
                  ])
                ]),
                _vm._v(" "),
                _c("h3", [
                  _c("a", { attrs: { name: "t3" } }),
                  _c("a", { attrs: { name: "t3" } }),
                  _vm._v("注销登录的配置:")
                ]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c(
                      "ol",
                      {
                        staticClass: "hljs-ln",
                        staticStyle: { width: "1652px" }
                      },
                      [
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "1" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "2" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("protected")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("configure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(HttpSecurity http)")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" Exception ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "3" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//开启配置")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "4" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        http.authorizeRequests()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "5" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 指定admin角色可以访问该路径")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "6" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .antMatchers("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/admin/**"')
                              ]),
                              _vm._v(").hasRole("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"admin"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "7" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 指定admin和user可以访问该路径")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "8" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .antMatchers("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/user/**"')
                              ]),
                              _vm._v(").hasAnyRole("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"admin"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"user"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "9" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 剩下的请求登录之后就可以访问")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "10" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                .anyRequest().authenticated()"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "11" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .and()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "12" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 表单登录的url,请求地址")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "13" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .formLogin()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "14" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// url,请求地址")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "15" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .loginProcessingUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/dolog"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "16" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 登录页面")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "17" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .loginPage("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"login"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "18" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "// 修改默认的键,默认为username和password"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "19" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .usernameParameter("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"uname"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "20" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .passwordParameter("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"passwd"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "21" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 前后端分离,登录成功的处理")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "22" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .successHandler("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" AuthenticationSuccessHandler() {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "23" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "24" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("onAuthenticationSuccess")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v(
                                    "(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication)"
                                  )
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" IOException, ServletException ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "25" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "//authentication里保存了登录成功的用户信息"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "26" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        httpServletResponse.setContentType("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"application/json;charset=utf-8"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "27" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        PrintWriter out = httpServletResponse.getWriter();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "28" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        Map<String, Object> map = "
                              ),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" HashMap<>();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "29" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"status"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-number" }, [
                                _vm._v("200")
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "30" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 登录成功的用户信息")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "31" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"mes"')
                              ]),
                              _vm._v(", authentication.getPrincipal());")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "32" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 返回一个json")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "33" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.write("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(
                                " ObjectMapper().writeValueAsString(map));"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "34" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.flush();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "35" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.close();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "36" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "37" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                })")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "38" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                 "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//前后端不分,页面跳转")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "39" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .successForwardUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"成功跳转"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "40" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//登录失败的处理")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "41" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .failureHandler("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" AuthenticationFailureHandler() {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "42" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "43" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("onAuthenticationFailure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v(
                                    "(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, AuthenticationException e)"
                                  )
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" IOException, ServletException ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "44" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        httpServletResponse.setContentType("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"application/json;charset=utf-8"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "45" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        PrintWriter out = httpServletResponse.getWriter();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "46" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        Map<String, Object> map = "
                              ),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" HashMap<>();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "47" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"status"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-number" }, [
                                _vm._v("401")
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "48" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" (e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" LockedException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "49" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"账户被锁定请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "50" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }"),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v("(e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" CredentialsExpiredException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "51" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"密码过期请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "52" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }"),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" (e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" AccountExpiredException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "53" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"账户过期请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "54" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }"),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v("(e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" DisabledException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "55" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"账户被禁用请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "56" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }"),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" (e "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" BadCredentialsException){")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "57" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                            map.put("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"msg"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"用户名密码输入错误,请重新输入!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "58" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "59" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.write("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(
                                " ObjectMapper().writeValueAsString(map));"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "60" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.flush();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "61" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.close();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "62" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "63" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                })")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "64" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .failureForwardUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"失败跳转"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "65" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 任何角色可以访问")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "66" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .permitAll()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "67" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .and()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "68" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .logout()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "69" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 注销请求路劲")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "70" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .logoutUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/logout"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "71" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 注销成功的处理")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "72" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .logoutSuccessHandler("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" LogoutSuccessHandler() {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "73" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "74" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("onLogoutSuccess")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v(
                                    "(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication)"
                                  )
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" IOException, ServletException ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "75" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        httpServletResponse.setContentType("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"application/json;charset=utf-8"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "76" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        PrintWriter out = httpServletResponse.getWriter();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "77" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.write("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" ObjectMapper().writeValueAsString("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" ObjectMapper().writeValueAsString("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"注销成功!"')
                              ]),
                              _vm._v(")));")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "78" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.flush();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "79" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.close();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "80" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "81" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                })")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "82" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .logoutSuccessUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"注销成功的跳转"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "83" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .and()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "84" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("// 关闭csrf")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "85" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .csrf().disable();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "86" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "87" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "88" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "89" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "90" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("}")
                            ])
                          ])
                        ])
                      ]
                    )
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("h3", [
                  _c("a", { attrs: { name: "t4" } }),
                  _c("a", { attrs: { name: "t4" } }),
                  _vm._v("多HttpSecurity配置： ")
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v(
                      "config 不需要继承 WebSecurityConfigurerAdapter, 在 MultiHttpSecurityConfig 中创建静态内部类继承 WebSecurityConfigurerAdapter 即可，静态 内部类上添加＠Configuration 注解和＠Order 注解，＠Order 注解表示该配直的优先级，数字 越小优先级越大，未加＠Order 注解的配直优先级最小。 "
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c("ol", { staticClass: "hljs-ln" }, [
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "1" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "2" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "3" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" : 多HttpSecurity配置")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "4" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(": Liruilong")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "5" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(": 2019/12/24 17:01")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "6" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" */")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "7" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "8" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Configuration")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "9" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("MultiHttpSecurity")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "10" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Bean")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "11" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _vm._v("PasswordEncoder "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("passwordEncoder")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "12" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" NoOpPasswordEncoder.getInstance();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "13" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "14" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Autowired")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "15" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("protected")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("configure")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(AuthenticationManagerBuilder auth)")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(" Exception ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "16" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        auth.inMemoryAuthentication()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "17" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .withUser("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"liruilong"')
                            ]),
                            _vm._v(").password("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"123"')
                            ]),
                            _vm._v(").roles("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"admin"')
                            ]),
                            _vm._v(")")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "18" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .and()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "19" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                .withUser("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"liruilongs"')
                            ]),
                            _vm._v(").password("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"123"')
                            ]),
                            _vm._v(").roles("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"user"')
                            ]),
                            _vm._v(");")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "20" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "21" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Configuration")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "22" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Order(1)")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "23" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("static")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("AdminSecurityConfig")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("extends")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("WebSecurityConfigurerAdapter")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "24" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "25" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("protected")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("configure")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(HttpSecurity http)")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(" Exception ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "26" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("            "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("//开启配置")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "27" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("            http.antMatcher("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"/admin/**"')
                            ]),
                            _vm._v(
                              ").authorizeRequests().anyRequest().hasAnyRole("
                            ),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"admin"')
                            ]),
                            _vm._v(")")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "28" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "29" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "30" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Configuration")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "31" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("static")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("OtherSecurityConfig")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("extends")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("WebSecurityConfigurerAdapter")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "32" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "33" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("protected")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("configure")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(HttpSecurity http)")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(" Exception ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "34" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("            "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("//开启配置")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "35" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "            http.authorizeRequests().anyRequest().authenticated()"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "36" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                    .and()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "37" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                    .formLogin()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "38" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                    .failureForwardUrl("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"/dolog"')
                            ]),
                            _vm._v(")")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "39" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                    .permitAll()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "40" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                    .and()")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "41" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                    .csrf().disable();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "42" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "43" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "44" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("}")
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("h3", [
                  _c("a", { attrs: { name: "t5" } }),
                  _c("a", { attrs: { name: "t5" } }),
                  _vm._v("密码加盐处理:")
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v("通过BCryptPasswordEncoder生成密码密文,")
                  ])
                ]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c("ol", { staticClass: "hljs-ln" }, [
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "1" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("contextLoads")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "2" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("for")
                            ]),
                            _vm._v(" ("),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("int")
                            ]),
                            _vm._v(" i = "),
                            _c("span", { staticClass: "hljs-number" }, [
                              _vm._v("0")
                            ]),
                            _vm._v("; i < "),
                            _c("span", { staticClass: "hljs-number" }, [
                              _vm._v("0")
                            ]),
                            _vm._v("; i++){")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "3" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "            BCryptPasswordEncoder encoder = "
                            ),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("new")
                            ]),
                            _vm._v(" BCryptPasswordEncoder();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "4" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "            System.out.println(encoder.encode("
                            ),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"123"')
                            ]),
                            _vm._v("));")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "5" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "6" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "7" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "8" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "9" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Bean")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "10" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _vm._v("PasswordEncoder "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("passwordEncoder")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "11" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" NoOpPasswordEncoder.getInstance();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "12" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "13" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "14" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("替换为")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "15" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Bean")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "16" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _vm._v("PasswordEncoder "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("passwordEncoder")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "17" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("new")
                            ]),
                            _vm._v(" BCryptPasswordEncoder();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "18" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("h3", [
                  _c("a", { attrs: { name: "t6" } }),
                  _c("a", { attrs: { name: "t6" } }),
                  _vm._v("方法安全:")
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v("即该方法加一个权限,明确该方法是什么角色可以调用的.")
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v(
                      "开发者也可以通过注解来灵活地配置方法安全，要 使用相关注解，首先要通过＠EnableGloba!MethodSecurity 注解开启基于注解的安全配置："
                    )
                  ]),
                  _c("br"),
                  _vm._v("  ")
                ]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c(
                      "ol",
                      {
                        staticClass: "hljs-ln",
                        staticStyle: { width: "1047px" }
                      },
                      [
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "1" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Configuration")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "2" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//用于解锁注解。")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "3" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v(
                                  "@EnableGlobalMethodSecurity(prePostEnabled = true,securedEnabled = true)"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "4" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-class" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("class")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("MultiHttpSecurityConfig")
                                ]),
                                _vm._v(" ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "5" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "6" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Bean")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "7" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _vm._v("PasswordEncoder "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("passwordEncoder")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("()")
                                ]),
                                _vm._v(" ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "8" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("return")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" BCryptPasswordEncoder();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "9" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "10" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "11" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Autowired")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "12" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("protected")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("configure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(AuthenticationManagerBuilder auth)")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" Exception ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "13" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        auth.inMemoryAuthentication()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "14" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .withUser("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"javaboy"')
                              ]),
                              _vm._v(").password("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v(
                                  '"$2a$10$G3kVAJHvmRrr6sOj.j4xpO2Dsxl5EG8rHycPHFWyi9UMIhtdSH15u"'
                                )
                              ]),
                              _vm._v(").roles("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"admin"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "15" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .and()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "16" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .withUser("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"江南一点雨"')
                              ]),
                              _vm._v(").password("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v(
                                  '"$2a$10$kWjG2GxWhm/2tN2ZBpi7bexXjUneIKFxIAaMYJzY7WcziZLCD4PZS"'
                                )
                              ]),
                              _vm._v(").roles("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"user"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "17" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "18" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "19" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Configuration")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "20" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Order(1)")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "21" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("static")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-class" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("class")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("AdminSecurityConfig")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("extends")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("WebSecurityConfigurerAdapter")
                                ])
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "22" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "23" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("protected")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("configure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(HttpSecurity http)")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" Exception ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "24" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("            http.antMatcher("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/admin/**"')
                              ]),
                              _vm._v(
                                ").authorizeRequests().anyRequest().hasAnyRole("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"admin"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "25" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "26" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "27" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "28" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Configuration")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "29" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("static")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-class" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("class")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("OtherSecurityConfig")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("extends")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("WebSecurityConfigurerAdapter")
                                ])
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "30" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "31" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("protected")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("configure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(HttpSecurity http)")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" Exception ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "32" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "            http.authorizeRequests().anyRequest().authenticated()"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "33" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    .and()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "34" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    .formLogin()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "35" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                    .loginProcessingUrl("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/doLogin"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "36" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    .permitAll()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "37" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    .and()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "38" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    .csrf().disable();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "39" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "40" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "41" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("}")
                            ])
                          ])
                        ])
                      ]
                    )
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [_vm._v(" ")]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c("ol", { staticClass: "hljs-ln" }, [
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "1" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("package")
                            ]),
                            _vm._v(" com.liruilong.securityl.demo.service;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "2" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "3" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.access.annotation.Secured;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "4" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.access.prepost.PreAuthorize;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "5" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" org.springframework.stereotype.Service;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "6" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "7" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "8" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" :")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "9" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(": Liruilong")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "10" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(": 2019/12/24 17:31")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "11" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" */")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "12" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Service")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "13" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("userservlce")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "14" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("//")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "15" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@PreAuthorize(\"hasRole('admin')\")")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "16" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("admin")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "17" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"hello admin"')
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "18" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "19" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v('@Secured("ROLB_user")')
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "20" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("users")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "21" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"hello user"')
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "22" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "23" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v(
                                "@PreAuthorize(\"hasAnyRole('admin','user')\")"
                              )
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "24" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("hello")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ])
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "25" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"hello hello"')
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "26" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "27" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("}")
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [_vm._v("代码解释： •")]),
                _vm._v(" "),
                _c("ul", [
                  _c("li", [
                    _c("strong", [
                      _vm._v(
                        "@Secured(”ROLE_ AD MIN＂）注解表示访问该方法需要 ADMIN 角色，注意这里需要在角色前加一个前缀“ROLE ’"
                      )
                    ])
                  ]),
                  _c("li", [
                    _c("strong", [
                      _vm._v(
                        "@PreAuthorize（”hasRole（’AD MIN’） and hasRole('DBA＇）”）注解表示访问该方法既需妥 ADMIN 角色又需要 DBA 角色。 •"
                      )
                    ])
                  ]),
                  _c("li", [
                    _c("strong", [
                      _vm._v(
                        "@PreAuthorize(\"hasAnyRole（’ADMIN','DBA','USER’）”）表示访问该方法需要 ADMIN、 DBA 或 USER 角色。 "
                      )
                    ])
                  ]),
                  _c("li", [
                    _c("strong", [
                      _vm._v(
                        "•@PreAuthorize 和＠PostAuthorize 中都可以使用基于表达式的语法。"
                      )
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("h1", [
                  _c("a", { attrs: { name: "t7" } }),
                  _c("a", { attrs: { name: "t7" } }),
                  _vm._v("基于数据库的认证")
                ]),
                _vm._v(" "),
                _c("h3", [
                  _c("a", { attrs: { name: "t8" } }),
                  _c("a", { attrs: { name: "t8" } }),
                  _vm._v("动态配置权限")
                ]),
                _vm._v(" "),
                _c("ul", [
                  _c("li", [
                    _c("strong", [
                      _vm._v("配置自定义权限拦截withObjectPostProcessor")
                    ]),
                    _vm._v(" "),
                    _c("ul", [
                      _c("li", [
                        _c("img", {
                          attrs: {
                            alt: "",
                            height: "319",
                            src:
                              "https://img-blog.csdnimg.cn/20200216114348376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                            width: "1200"
                          }
                        })
                      ])
                    ])
                  ]),
                  _c("li", [
                    _c("strong", [
                      _vm._v(
                        "定义自定义拦截逻辑,获取有当前访问路径权限的所有角色,返回角色数组."
                      )
                    ]),
                    _vm._v(" "),
                    _c("ul", [
                      _c("li", [
                        _c("strong", [
                          _vm._v(
                            "通过FilterlnvocationSecurityMetadataSource 接口中的 getAttributes 方法来确定一个请求需要哪些角色"
                          )
                        ])
                      ]),
                      _c("li", [
                        _c("img", {
                          attrs: {
                            alt: "",
                            height: "765",
                            src:
                              "https://img-blog.csdnimg.cn/20200216114755243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                            width: "961"
                          }
                        })
                      ])
                    ])
                  ]),
                  _c("li", [
                    _c("strong", [
                      _vm._v(
                        "自定义角色比对之后的逻辑.判断当前用户是否有访问角色.的权利,"
                      )
                    ]),
                    _vm._v(" "),
                    _c("ul", [
                      _c("li", [
                        _c("strong", [
                          _c("span", { staticStyle: { color: "#f33b45" } }, [
                            _vm._v(
                              "自定义 AccessDecisionManager 并重写 decide 方法，decide有三个参数,当前登录用户的信息,请求对象,上一个getAttribute返回的角色数组."
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("img", {
                          attrs: {
                            alt: "",
                            height: "625",
                            src:
                              "https://img-blog.csdnimg.cn/20200216124415775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                            width: "979"
                          }
                        })
                      ])
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("h1", [
                  _c("a", { attrs: { name: "t9" } }),
                  _c("img", {
                    staticClass: "has",
                    attrs: {
                      alt: "",
                      height: "208",
                      src:
                        "https://img-blog.csdnimg.cn/20200213122344351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                      width: "705"
                    }
                  }),
                  _c("br"),
                  _c("img", {
                    staticClass: "has",
                    attrs: {
                      alt: "",
                      height: "518",
                      src:
                        "https://img-blog.csdnimg.cn/20200213121307187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                      width: "1200"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c("ol", { staticClass: "hljs-ln hundred" }, [
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "1" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("package")
                            ]),
                            _vm._v(" com.liruilong.hros.model;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "2" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "3" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "4" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " com.fasterxml.jackson.annotation.JacksonInject;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "5" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " com.fasterxml.jackson.annotation.JsonIgnore;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "6" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " com.fasterxml.jackson.annotation.JsonIgnoreType;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "7" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.core.GrantedAuthority;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "8" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.core.authority.SimpleGrantedAuthority;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "9" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.core.userdetails.UserDetails;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "10" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "11" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" java.util.ArrayList;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "12" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" java.util.Collection;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "13" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" java.util.List;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "14" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "15" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("Hr")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("implements")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("UserDetails")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "16" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" Integer id;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "17" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "18" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" String name;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "19" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "20" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" String phone;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "21" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "22" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" String telephone;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "23" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "24" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" String address;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "25" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "26" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" Boolean enabled;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "27" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "28" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" String username;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "29" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "30" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" String password;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "31" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "32" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" String userface;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "33" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "34" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" String remark;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "35" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "36" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("private")
                            ]),
                            _vm._v(" List<Role> roles;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "37" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "38" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" Integer "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getId")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "39" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" id;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "40" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "41" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "42" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setId")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(Integer id)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "43" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".id = id;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "44" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "45" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "46" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getName")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "47" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" name;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "48" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "49" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "50" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setName")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(String name)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "51" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".name = name == "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" ? "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" : name.trim();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "52" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "53" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "54" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getPhone")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "55" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" phone;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "56" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "57" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "58" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setPhone")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(String phone)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "59" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".phone = phone == "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" ? "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" : phone.trim();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "60" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "61" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "62" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getTelephone")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "63" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" telephone;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "64" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "65" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "66" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setTelephone")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(String telephone)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "67" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".telephone = telephone == "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" ? "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" : telephone.trim();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "68" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "69" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "70" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getAddress")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "71" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" address;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "72" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "73" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "74" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setAddress")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(String address)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "75" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".address = address == "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" ? "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" : address.trim();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "76" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "77" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "78" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "79" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "80" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setEnabled")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(Boolean enabled)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "81" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".enabled = enabled;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "82" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "83" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "84" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "85" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getUsername")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "86" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" username;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "87" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "88" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setUsername")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(String username)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "89" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".username = username == "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" ? "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" : username.trim();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "90" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "91" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "92" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "93" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getPassword")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "94" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" password;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "95" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "96" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "97" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setPassword")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(String password)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "98" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".password = password == "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" ? "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" : password.trim();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "99" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "100" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "101" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getUserface")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "102" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" userface;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "103" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "104" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "105" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setUserface")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(String userface)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "106" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".userface = userface == "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" ? "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" : userface.trim();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "107" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "108" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "109" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" String "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getRemark")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "110" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" remark;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "111" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "112" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "113" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setRemark")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(String remark)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "114" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".remark = remark == "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" ? "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(" : remark.trim();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "115" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "116" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "117" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "118" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("boolean")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("isAccountNonExpired")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "119" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("true")
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "120" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "121" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "122" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "123" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("boolean")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("isAccountNonLocked")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "124" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("true")
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "125" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "126" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "127" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "128" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("boolean")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("isCredentialsNonExpired")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "129" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("true")
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "130" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "131" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "132" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "133" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("boolean")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("isEnabled")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "134" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" enabled;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "135" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "136" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "137" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "138" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "139" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@JsonIgnore")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "140" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(
                              " Collection<? extends GrantedAuthority> getAuthorities() {"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "141" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "      List<SimpleGrantedAuthority> authorities = "
                            ),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("new")
                            ]),
                            _vm._v(" ArrayList<>(roles.size());")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "142" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "      roles.stream().forEach( (role) ->authorities.add("
                            ),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("new")
                            ]),
                            _vm._v(" SimpleGrantedAuthority(role.getName())));")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "143" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" authorities;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "144" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "145" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "146" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" List<Role> "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getRoles")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "147" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" roles;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "148" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "149" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "150" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("void")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("setRoles")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(List<Role> roles)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "151" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("this")
                            ]),
                            _vm._v(".roles = roles;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "152" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "153" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("}")
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("img", {
                    attrs: {
                      alt: "",
                      height: "269",
                      src:
                        "https://img-blog.csdnimg.cn/20200216112457918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                      width: "777"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v(
                      "要实现动态配置权限，首先要自定义 FilterlnvocationSecurityMetadataSource,"
                    ),
                    _c("span", { staticStyle: { color: "#f33b45" } }, [
                      _vm._v("自定义权限拦截,获取当前请求的所有角色")
                    ])
                  ]),
                  _vm._v(","),
                  _c("strong", [
                    _vm._v(
                      " Spring Security 中通过 FilterlnvocationSecurityMetadataSource 接口中的 getAttributes 方法来确定一个请求需要哪些 角色， FilterlnvocationSecurityMetadataSource 接口的默认实现类是 DefaultFilterlnvocationSecurityMetadataSource ，参考 DefaultFilterlnvocationSecurityMetadataSource 的实现，开发者可以定义自己的 FilterlnvocationSecurityMetadataSource，"
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _c("code", [_vm._v("SecurityMetadataSource")]),
                    _vm._v("是"),
                    _c("code", [_vm._v("Spring Security")]),
                    _vm._v(
                      '的一个概念模型接口。用于表示对受权限保护的"安全对象"的权限设置信息。一个该类对象可以被理解成一个映射表，映射表中的每一项包含如下信息 :'
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("ul", [
                  _c("li", [_c("strong", [_vm._v("安全对象")])]),
                  _c("li", [_c("strong", [_vm._v("安全对象所需权限信息")])])
                ]),
                _vm._v(" "),
                _c("p", [_c("strong", [_vm._v("围绕该映射表，")])]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c("ol", { staticClass: "hljs-ln" }, [
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "1" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("package")
                            ]),
                            _vm._v(" com.liruilong.hros.config;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "2" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "3" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" com.liruilong.hros.mapper.MenuMapper;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "4" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" com.liruilong.hros.model.Menu;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "5" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" com.liruilong.hros.model.Role;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "6" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" com.liruilong.hros.service.MenuService;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "7" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.beans.factory.annotation.Autowired;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "8" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.access.ConfigAttribute;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "9" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.access.SecurityConfig;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "10" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.web.FilterInvocation;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "11" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(
                              " org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource;"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "12" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" org.springframework.stereotype.Component;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "13" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" org.springframework.util.AntPathMatcher;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "14" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "15" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" java.util.Collection;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "16" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("import")
                            ]),
                            _vm._v(" java.util.List;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "17" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "18" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "19" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(
                                " : 权限处理,根据请求,分析需要的角色,该类的主要功能就是通过当前的请求地址，获取该地址需要的用户角色"
                              )
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "20" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(": Liruilong")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "21" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(": 2019/12/24 12:17")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "22" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v(" */")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "23" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Component")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "24" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("public")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-class" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("class")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v(
                                  "CustomFilterInvocationSecurityMetadataSource"
                                )
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("implements")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("FilterInvocationSecurityMetadataSource")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "25" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Autowired")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "26" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    MenuService menuService;")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "27" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("//路径比较工具")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "28" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    AntPathMatcher antPathMatcher = "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("new")
                            ]),
                            _vm._v(" AntPathMatcher();")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "29" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("/**")
                              ])
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "30" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@return")
                              ]),
                              _vm._v(
                                " java.util.Collection<org.springframework.security.access.ConfigAttribute>"
                              )
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "31" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Author")
                              ]),
                              _vm._v(" Liruilong")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "32" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Description")
                              ]),
                              _vm._v(" 当前请求需要的角色")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "33" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Date")
                              ]),
                              _vm._v(" 18:13 2019/12/24")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "34" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     * "),
                              _c("span", { staticClass: "hljs-doctag" }, [
                                _vm._v("@Param")
                              ]),
                              _vm._v(" [object]")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "35" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("     **/")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "36" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "37" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" Collection<ConfigAttribute> "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getAttributes")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(Object object)")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(" IllegalArgumentException ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "38" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("//获取当前请求路径")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "39" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "        String requestUrl = ((FilterInvocation) object).getRequestUrl();"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "40" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("//获取所有的菜单url路径")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "41" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "        List<Menu> menus = menuService.getAllMenusWithRole();"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "42" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("for")
                            ]),
                            _vm._v(" (Menu menu : menus) {")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "43" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("            "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("if")
                            ]),
                            _vm._v(
                              " (antPathMatcher.match(menu.getUrl(), requestUrl)) {"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "44" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("//拥有当前菜单权限的角色")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "45" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "                List<Role> roles = menu.getRoles();"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "46" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                String[] strings = "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("new")
                            ]),
                            _vm._v(" String[roles.size()];")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "47" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("for")
                            ]),
                            _vm._v(" ("),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("int")
                            ]),
                            _vm._v(" i = "),
                            _c("span", { staticClass: "hljs-number" }, [
                              _vm._v("0")
                            ]),
                            _vm._v("; i < roles.size(); i++) {")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "48" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(
                              "                    strings[i] = roles.get(i).getName();"
                            )
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "49" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "50" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("                "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" SecurityConfig.createList(strings);")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "51" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("            }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "52" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "53" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-comment" }, [
                              _vm._v("// 没匹配上的资源都是登录")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "54" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" SecurityConfig.createList("),
                            _c("span", { staticClass: "hljs-string" }, [
                              _vm._v('"ROLE_LOGIN"')
                            ]),
                            _vm._v(");")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "55" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "56" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "57" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" Collection<ConfigAttribute> "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("getAllConfigAttributes")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("()")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "58" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("null")
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "59" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "60" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v(" ")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "61" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-meta" }, [
                              _vm._v("@Override")
                            ])
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "62" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    "),
                            _c("span", { staticClass: "hljs-function" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("boolean")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-title" }, [
                                _vm._v("supports")
                              ]),
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v("(Class<?> clazz)")
                              ]),
                              _vm._v(" ")
                            ]),
                            _vm._v("{")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "63" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("        "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("return")
                            ]),
                            _vm._v(" "),
                            _c("span", { staticClass: "hljs-keyword" }, [
                              _vm._v("true")
                            ]),
                            _vm._v(";")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "64" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("    }")
                          ])
                        ])
                      ]),
                      _c("li", [
                        _c("div", { staticClass: "hljs-ln-numbers" }, [
                          _c("div", {
                            staticClass: "hljs-ln-line hljs-ln-n",
                            attrs: { "data-line-number": "65" }
                          })
                        ]),
                        _c("div", { staticClass: "hljs-ln-code" }, [
                          _c("div", { staticClass: "hljs-ln-line" }, [
                            _vm._v("}")
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("h3", [
                  _c("a", { attrs: { name: "t10" } }),
                  _c("a", { attrs: { name: "t10" } }),
                  _c("strong", [
                    _vm._v(
                      " 开发者自定义 FilterlnvocationSecurityrMetadataSource"
                    )
                  ]),
                  _vm._v(" :")
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("span", { staticStyle: { color: "#f33b45" } }, [
                    _c("strong", [
                      _vm._v(
                        "主要实现该接口中的 getAttributes 方法， 该方法的参数是一个 FilterInvocation， 开发者可以从 Filterlnvocation 中提取出当前请求的 URL，返回值是 Collection<ConfigAttribute>，表示当前请求 URL 所需的角色"
                      )
                    ])
                  ]),
                  _vm._v("。")
                ]),
                _vm._v(" "),
                _c("ul", [
                  _c("li", [
                    _vm._v(
                      "创建一个 AntPathMatcher，主要用来实现 ant 风格的 URL 匹配。"
                    )
                  ]),
                  _c("li", [_vm._v("从参数中提取出当前请求的 URL。")]),
                  _c("li", [
                    _vm._v(
                      "从数据库中获取所有的资源信息，即本案例中的 menu 表以及 menu 所对应的 role,"
                    )
                  ]),
                  _c("li", [
                    _vm._v(
                      "追历资源信息，边历过程中获取当前请求的 URL 所需要的角色信息并返回。如 果当前请求的 URL 在资源表中不存在相应的模式，就假设该请求登录后即可访问，即直接返代码解释： ROLE LOGJN。"
                    )
                  ]),
                  _c("li", [
                    _vm._v(
                      "getAllConfigAttributes 方法用来返回所有定义好的权限资源， Spring Security 在启动时会校验 相关配置是否正确，如果不需要校验，那么该方法直接返回 null 即可。 supports 方法返回类对象是否支持校验。 "
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("h3", [
                  _c("a", { attrs: { name: "t11" } }),
                  _c("a", { attrs: { name: "t11" } }),
                  _vm._v(" 自定义 AccessDecisionManager")
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("span", { staticStyle: { color: "#f33b45" } }, [
                    _c("strong", [
                      _vm._v(
                        "当一个请求走完 FilterlnvocationSecurityMetadataSource 中的 getAttributes 方法后，接下来就会 来到 AccessDecisionManager 类中进行角色信息的比对，自定义 AccessDecisionManager 如下："
                      )
                    ])
                  ]),
                  _c("br"),
                  _vm._v("  ")
                ]),
                _vm._v(" "),
                _c("pre", { staticClass: "has", attrs: { name: "code" } }, [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c(
                      "ol",
                      {
                        staticClass: "hljs-ln",
                        staticStyle: { width: "1483px" }
                      },
                      [
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "1" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("package")
                              ]),
                              _vm._v(" com.liruilong.hros.config;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "2" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "3" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.beans.factory.annotation.Autowired;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "4" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.access.AccessDecisionManager;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "5" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.access.AccessDeniedException;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "6" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.access.ConfigAttribute;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "7" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.authentication.AnonymousAuthenticationToken;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "8" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.authentication.InsufficientAuthenticationException;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "9" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.core.Authentication;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "10" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.core.GrantedAuthority;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "11" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.stereotype.Component;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "12" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "13" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" java.util.Collection;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "14" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "15" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _c("span", { staticClass: "hljs-comment" }, [
                                  _vm._v("/**")
                                ])
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "16" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(" * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Description")
                                ]),
                                _vm._v(
                                  " : 判断当前用户是否具备菜单访问，当一个请求走完 FilterlnvocationSecurityMetadataSource 中的 getAttributes 方法后，接下来就会 来到 AccessDecisionManager 类中进行角色信息的比对"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "17" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(" * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Author")
                                ]),
                                _vm._v(": Liruilong")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "18" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(" * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Date")
                                ]),
                                _vm._v(": 2019/12/24 19:12")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "19" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(" */")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "20" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Component")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "21" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-class" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("class")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("CustomUrlDecisionManager")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("implements")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("AccessDecisionManager")
                                ]),
                                _vm._v(" ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "22" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "23" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _c("span", { staticClass: "hljs-comment" }, [
                                  _vm._v("/**")
                                ])
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "24" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@return")
                                ]),
                                _vm._v(" void")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "25" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Author")
                                ]),
                                _vm._v(" Liruilong")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "26" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Description")
                                ]),
                                _vm._v(
                                  " decide 方法有三个参数， 第一个参数包含当前登录用户的信息；"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "27" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "     * 第二个参数则是一个 Filterlnvocation 对 象 ，可以 获 取当前请求对 象等；"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "28" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "     * 第 三个参 数就是 FilterlnvocationSecurityMetadataSource 中的 getAttributes 方法的返回值， 即当前请求 URL 所 需要的角色。"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "29" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Date")
                                ]),
                                _vm._v(" 18:28 2020/2/13")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "30" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Param")
                                ]),
                                _vm._v(
                                  " [authentication, object, configAttributes]"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "31" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     **/")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "32" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "33" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "34" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("decide")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v(
                                    "(Authentication authentication, Object object, Collection<ConfigAttribute> configAttributes)"
                                  )
                                ])
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "35" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("            "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(
                                " AccessDeniedException, InsufficientAuthenticationException {"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "36" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("for")
                              ]),
                              _vm._v(
                                " (ConfigAttribute configAttribute : configAttributes) {"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "37" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "            String needRole = configAttribute.getAttribute();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "38" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("            "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" ("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"ROLE_LOGIN"')
                              ]),
                              _vm._v(".equals(needRole)) {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "39" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//判断用户是否登录")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "40" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" (authentication "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" AnonymousAuthenticationToken) {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "41" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throw")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" AccessDeniedException("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"尚未登录，请登录!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "42" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                } "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("else")
                              ]),
                              _vm._v(" {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "43" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("return")
                              ]),
                              _vm._v(";")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "44" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "45" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("            }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "46" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "            Collection<? extends GrantedAuthority> authorities = authentication.getAuthorities();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "47" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("            "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("for")
                              ]),
                              _vm._v(
                                " (GrantedAuthority authority : authorities) {"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "48" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(
                                " (authority.getAuthority().equals(needRole)) {"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "49" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("return")
                              ]),
                              _vm._v(";")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "50" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "51" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("            }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "52" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "53" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throw")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" AccessDeniedException("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"权限不足，请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "54" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "55" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "56" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "57" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("boolean")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("supports")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(ConfigAttribute attribute)")
                                ]),
                                _vm._v(" ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "58" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("return")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("true")
                              ]),
                              _vm._v(";")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "59" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "60" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "61" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "62" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("boolean")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("supports")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(Class<?> clazz)")
                                ]),
                                _vm._v(" ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "63" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("return")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("true")
                              ]),
                              _vm._v(";")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "64" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "65" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("}")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "66" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "// authorities.stream().anyMatch((authority) ->authority.getAuthority().equals(attribute));"
                                )
                              ])
                            ])
                          ])
                        ])
                      ]
                    )
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _c("span", { staticStyle: { color: "#f33b45" } }, [
                      _vm._v(
                        "自定义 AccessDecisionManager 并重写 decide 方法，"
                      )
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v(
                      "在该方法中判断当前登录的用户是否具 备当前请求 URL 所需要的角色信息，如果不具备，就抛出 AccessDeniedException 异常，否 则不做任何事即可。 "
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("span", { staticStyle: { color: "#f33b45" } }, [
                    _c("strong", [_vm._v("decide 方法有三个参数，")])
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("span", { staticStyle: { color: "#f33b45" } }, [
                    _c("strong", [_vm._v("第一个参数包含当前登录用户的信息；")])
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("span", { staticStyle: { color: "#f33b45" } }, [
                    _c("strong", [
                      _vm._v(
                        "第二个参数则是一个 Filterlnvocation 对 象 ，可以 获 取当前请求对 象等；"
                      )
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("span", { staticStyle: { color: "#f33b45" } }, [
                    _c("strong", [
                      _vm._v(
                        "第 三个参 数就是 FilterlnvocationSecurityMetadataSource 中的 getAttributes 方法的返回值， 即当前请求 URL 所 需要的角色。"
                      )
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [
                    _vm._v(
                      "进行角色信息对比，如果需要的角色是 ROLE_LOG，说明当前请求的 URL 用 户登录后即可访问，如果 auth 是 UsemamePasswordAuthenticationToken 的实例，那么说明当前用户已登录，该方法到此结束，否则进入正常的判断流程，如果当前用户具备当前请求需 要的角色，那么方法结束。"
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("strong", [_vm._v("springSecurity配置流程分析:")])
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("img", {
                    attrs: {
                      alt: "",
                      height: "819",
                      src:
                        "https://img-blog.csdnimg.cn/20200216171913215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                      width: "1009"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("img", {
                    attrs: {
                      alt: "",
                      height: "589",
                      src:
                        "https://img-blog.csdnimg.cn/20200216171937340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nhbmhld3V5YW5n,size_16,color_FFFFFF,t_70",
                      width: "671"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("pre", [
                  _c("code", { staticClass: "language-java hljs" }, [
                    _c(
                      "ol",
                      {
                        staticClass: "hljs-ln hundred",
                        staticStyle: { width: "1658px" }
                      },
                      [
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "1" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("package")
                              ]),
                              _vm._v(" com.liruilong.hros.config;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "2" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "3" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " com.fasterxml.jackson.databind.ObjectMapper;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "4" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " com.liruilong.hros.filter.VerifyCodeFilter;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "5" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" com.liruilong.hros.model.Hr;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "6" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" com.liruilong.hros.model.RespBean;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "7" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" com.liruilong.hros.service.HrService;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "8" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.beans.factory.annotation.Autowired;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "9" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.context.annotation.Bean;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "10" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.context.annotation.Configuration;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "11" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.authentication.*;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "12" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.config.annotation.ObjectPostProcessor;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "13" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "14" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.config.annotation.web.builders.HttpSecurity;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "15" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.config.annotation.web.builders.WebSecurity;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "16" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "17" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.core.Authentication;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "18" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.core.AuthenticationException;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "19" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "20" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.crypto.password.PasswordEncoder;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "21" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.web.AuthenticationEntryPoint;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "22" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.web.access.intercept.FilterSecurityInterceptor;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "23" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.web.authentication.AuthenticationSuccessHandler;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "24" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "25" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(
                                " org.springframework.security.web.authentication.logout.LogoutSuccessHandler;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "26" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "27" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" javax.servlet.ServletException;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "28" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" javax.servlet.http.HttpServletRequest;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "29" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" javax.servlet.http.HttpServletResponse;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "30" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" java.io.IOException;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "31" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("import")
                              ]),
                              _vm._v(" java.io.PrintWriter;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "32" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "33" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _c("span", { staticClass: "hljs-comment" }, [
                                  _vm._v("/**")
                                ])
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "34" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(" * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Description")
                                ]),
                                _vm._v(" :")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "35" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(" * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Author")
                                ]),
                                _vm._v(": Liruilong")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "36" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(" * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Date")
                                ]),
                                _vm._v(": 2019/12/18 19:11")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "37" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(" */")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "38" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "39" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Configuration")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "40" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-class" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("class")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("SecurityConfig")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("extends")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("WebSecurityConfigurerAdapter")
                                ]),
                                _vm._v(" ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "41" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Autowired")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "42" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    HrService hrService;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "43" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Autowired")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "44" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "    CustomFilterInvocationSecurityMetadataSource customFilterInvocationSecurityMetadataSource;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "45" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Autowired")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "46" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "    CustomUrlDecisionManager customUrlDecisionManager;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "47" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("     "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Autowired")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "48" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    VerifyCodeFilter verifyCodeFilter ;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "49" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Autowired")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "50" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "    MyAuthenticationFailureHandler myAuthenticationFailureHandler;"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "51" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "52" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "53" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("protected")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("configure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(HttpSecurity http)")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" Exception ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "54" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "        http.addFilterBefore(verifyCodeFilter, UsernamePasswordAuthenticationFilter.class)"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "55" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .authorizeRequests()")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "56" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                //.anyRequest().authenticated()"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "57" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                //所有请求的都会经过这进行鉴权处理。返回当前请求需要的角色。"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "58" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                .withObjectPostProcessor("
                              ),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(
                                " ObjectPostProcessor<FilterSecurityInterceptor>() {"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "59" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "60" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("public")
                              ]),
                              _vm._v(" <O extends FilterSecurityInterceptor> "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _vm._v("O "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("postProcess")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(O object)")
                                ]),
                                _vm._v(" ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "61" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        object.setSecurityMetadataSource(customFilterInvocationSecurityMetadataSource);"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "62" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        object.setAccessDecisionManager(customUrlDecisionManager);"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "63" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("return")
                              ]),
                              _vm._v(" object;")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "64" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "65" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                })")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "66" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                .and().formLogin().usernameParameter("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"username"')
                              ]),
                              _vm._v(").passwordParameter("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"password"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "67" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//设置登录请求的url路径")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "68" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .loginProcessingUrl("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/doLogin"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "69" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _c("span", { staticClass: "hljs-comment" }, [
                                  _vm._v(
                                    "/*需要身份验证时，将浏览器重定向到/ login"
                                  )
                                ])
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "70" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "                我们负责在请求/ login时呈现登录页面"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "71" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "                当身份验证尝试失败时，将浏览器重定向到/ login？error（因为我们没有另外指定）"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "72" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "                当请求/ login？error时，我们负责呈现失败页面"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "73" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "                成功注销后，将浏览器重定向到/ login？logout（因为我们没有另外指定）"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "74" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "                我们负责在请求/ login？logout时呈现注销确认页面*/"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "75" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .loginPage("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/login"')
                              ]),
                              _vm._v(")")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "76" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//登录成功回调")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "77" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .successHandler("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" AuthenticationSuccessHandler() {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "78" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "79" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("onAuthenticationSuccess")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v(
                                    "(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication)"
                                  )
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" IOException, ServletException ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "80" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        httpServletResponse.setContentType("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"application/json;charset=utf-8"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "81" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        PrintWriter out = httpServletResponse.getWriter();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "82" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        Hr hr = (Hr) authentication.getPrincipal();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "83" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//密码不回传")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "84" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        hr.setPassword("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("null")
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "85" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        RespBean ok = RespBean.ok("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"登录成功！"')
                              ]),
                              _vm._v(", hr);")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "86" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//将hr转化为Sting")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "87" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        String s = "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" ObjectMapper().writeValueAsString(ok);")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "88" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.write(s);")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "89" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.flush();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "90" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.close();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "91" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "92" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                })")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "93" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//登失败回调")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "94" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                .failureHandler(myAuthenticationFailureHandler)"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "95" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//相关的接口直接返回")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "96" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                .permitAll().and().logout()"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "97" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//注销登录")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "98" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                .logoutSuccessHandler("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" LogoutSuccessHandler() {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "99" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "100" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("onLogoutSuccess")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _c("span", { staticClass: "hljs-params" }, [
                                    _vm._v(
                                      "(HttpServletRequest httpServletRequest,"
                                    )
                                  ])
                                ])
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "101" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v(
                                  "                                                HttpServletResponse httpServletResponse,"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "102" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-params" }, [
                                _vm._v(
                                  "                                                Authentication authentication)"
                                )
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("throws")
                              ]),
                              _vm._v(" IOException, ServletException {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "103" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        httpServletResponse.setContentType("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"application/json;charset=utf-8"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "104" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        PrintWriter out = httpServletResponse.getWriter();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "105" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.write("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(
                                " ObjectMapper().writeValueAsString(RespBean.ok("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"注销成功!"')
                              ]),
                              _vm._v(")));")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "106" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.flush();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "107" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.close();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "108" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "109" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                })")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "110" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                .permitAll().and().csrf().disable().exceptionHandling()"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "111" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v(
                                  "//没有认证时，在这里处理结果，不要重定向"
                                )
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "112" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                .authenticationEntryPoint("
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "113" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("//myAuthenticationEntryPoint;")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "114" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" AuthenticationEntryPoint() {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "115" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "116" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("commence")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v(
                                    "(HttpServletRequest req, HttpServletResponse resp, AuthenticationException authException)"
                                  )
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" IOException, ServletException ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "117" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        resp.setContentType("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"application/json;charset=utf-8"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "118" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        resp.setStatus("),
                              _c("span", { staticClass: "hljs-number" }, [
                                _vm._v("401")
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "119" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        PrintWriter out = resp.getWriter();"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "120" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                        RespBean respBean = RespBean.error("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"访问失败!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "121" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("if")
                              ]),
                              _vm._v(" (authException "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("instanceof")
                              ]),
                              _vm._v(" InsufficientAuthenticationException) {")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "122" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "                            respBean.setMsg("
                              ),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"请求失败，请联系管理员!"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "123" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "124" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.write("),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(
                                " ObjectMapper().writeValueAsString(respBean));"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "125" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.flush();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "126" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                        out.close();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "127" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "128" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("                });")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "129" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "130" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Bean")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "131" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _vm._v("PasswordEncoder "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("passwordEncoder")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("()")
                                ]),
                                _vm._v(" ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "132" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("return")
                              ]),
                              _vm._v(" "),
                              _c("span", { staticClass: "hljs-keyword" }, [
                                _vm._v("new")
                              ]),
                              _vm._v(" BCryptPasswordEncoder();")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "133" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "134" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "135" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("protected")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("configure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(AuthenticationManagerBuilder auth)")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" Exception ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "136" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(
                                "        auth.userDetailsService(hrService);"
                              )
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "137" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "138" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-comment" }, [
                                _c("span", { staticClass: "hljs-comment" }, [
                                  _vm._v("/**")
                                ])
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "139" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Author")
                                ]),
                                _vm._v(" Liruilong")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "140" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Description")
                                ]),
                                _vm._v("  放行的请求路径")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "141" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Date")
                                ]),
                                _vm._v(" 19:25 2020/2/7")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "142" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@Param")
                                ]),
                                _vm._v(" [web]")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "143" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     * "),
                                _c("span", { staticClass: "hljs-doctag" }, [
                                  _vm._v("@return")
                                ]),
                                _vm._v(" void")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "144" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _c("span", { staticClass: "hljs-comment" }, [
                                _vm._v("     **/")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "145" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-meta" }, [
                                _vm._v("@Override")
                              ])
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "146" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    "),
                              _c("span", { staticClass: "hljs-function" }, [
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("public")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("void")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-title" }, [
                                  _vm._v("configure")
                                ]),
                                _c("span", { staticClass: "hljs-params" }, [
                                  _vm._v("(WebSecurity web)")
                                ]),
                                _vm._v(" "),
                                _c("span", { staticClass: "hljs-keyword" }, [
                                  _vm._v("throws")
                                ]),
                                _vm._v(" Exception ")
                              ]),
                              _vm._v("{")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "147" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("        web.ignoring().antMatchers("),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/auth/code"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/login"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/css/**"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/js/**"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/index.html"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/img/**"')
                              ]),
                              _vm._v(", "),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/fonts/**"')
                              ]),
                              _vm._v(","),
                              _c("span", { staticClass: "hljs-string" }, [
                                _vm._v('"/favicon.ico"')
                              ]),
                              _vm._v(");")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "148" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("    }")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "149" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v("}")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "150" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ]),
                        _c("li", [
                          _c("div", { staticClass: "hljs-ln-numbers" }, [
                            _c("div", {
                              staticClass: "hljs-ln-line hljs-ln-n",
                              attrs: { "data-line-number": "151" }
                            })
                          ]),
                          _c("div", { staticClass: "hljs-ln-code" }, [
                            _c("div", { staticClass: "hljs-ln-line" }, [
                              _vm._v(" ")
                            ])
                          ])
                        ])
                      ]
                    )
                  ]),
                  _c("div", {
                    staticClass: "hljs-button {2}",
                    attrs: {
                      "data-title": "复制",
                      "data-report-click": '{"spm":"1001.2101.3001.4259"}',
                      onclick: "hljs.copyCode(event)"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [_vm._v("SpringSecurity执行流程分析:")]),
                _vm._v(" "),
                _c("p", [
                  _c("img", {
                    attrs: {
                      alt: "",
                      src:
                        "https://img-blog.csdn.net/20180318211512445?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L3UwMTM0MzU4OTM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [
                  _vm._v(
                    "UsernamePasswordAuthenticationFilter就是拦截我们通过表单提交接口提交的用户名和密码，如果是Basic提交的话，就会被BasicAuthenticationFilter拦截，最后的橙色FilterSecurityInterceptor是首先判断我们当前请求的url是否需要认证，如果需要认证，那么就看当前请求是否已经认证，是的话就放行到我们要访问的接口，否则重定向到认证页面。"
                  ),
                  _c("br"),
                  _vm._v("  ")
                ]),
                _vm._v(" "),
                _c("p", [
                  _vm._v(
                    "UsernamePasswordAuthenticationFilter首先会拦截请求，而UsernamePasswordAuthenticationFilter是继承于AbstractAuthenticationProcessingFilter的，在这个抽象类中已经定义好了doFilter的方法，而里面有一个attemptAuthentication方法是由子类实现的。所以当提交表单时spring security会发现这个一个表单提交，然后就调用了UsernamePasswordAuthenticationFilter的doFilter方法"
                  )
                ]),
                _vm._v(" "),
                _c("p", [
                  _vm._v(
                    "springSecurity其实就是一组过滤器，请求和响应都会经过这些过滤器，在系统启动的时候，spring boot会自动配上"
                  )
                ]),
                _vm._v(" "),
                _c("p", [_vm._v("黄色：已经存储的认证信息")]),
                _vm._v(" "),
                _c("p", [_vm._v("绿色：处理用户身份认证")]),
                _vm._v(" "),
                _c("p", [_vm._v("橙色：捕获黄色抛出的异常")]),
                _vm._v(" "),
                _c("p", [
                  _vm._v(
                    "蓝色：决定当前请求是否通过之前某个过滤器的身份认证，不能通过就抛出异常，通过了会帮我们直接跳转"
                  )
                ]),
                _vm._v(" "),
                _c("p", [
                  _c("img", {
                    attrs: {
                      alt: "",
                      src:
                        "https://img-blog.csdnimg.cn/20191205165135360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NoYW5kZWFpNTIw,size_16,color_FFFFFF,t_70"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", [_vm._v(" ")]),
                _vm._v(" "),
                _c("p", [
                  _vm._v(
                    "它的身份认证其实是始于访问资源开始。如果一个用户已登录，那么访问受保护的资源，则会校验该用户是否有权限访问。如果没有权限，则会调用权限拒绝的处理器进行处理。如果有权限，则能顺利访问该资源；"
                  )
                ]),
                _vm._v(" "),
                _c("p", [
                  _vm._v(
                    "一个用户未登录情况下，也即匿名用户，访问受保护的资源时，spring security会首先检查该资源是否需要权限，如果需要权限，然后再检查，该资源是否是白名单里面。如果是白名单，也能正常访问。如果是受保护的资源，则会提示该用户需要登录。"
                  ),
                  _c("br"),
                  _vm._v("  ")
                ]),
                _vm._v(" "),
                _c("p", [_vm._v(" ")]),
                _vm._v(" "),
                _c("p", [_vm._v("感觉学的不大好.....")])
              ]
            ),
            _c(
              "div",
              {
                attrs: {
                  "data-report-view":
                    '{"mod":"1585297308_001","dest":"https://blog.csdn.net/sanhewuyang/article/details/103681432","extend1":"pc","ab":"new"}'
                }
              },
              [_c("div")]
            )
          ]
        )
      ])
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}