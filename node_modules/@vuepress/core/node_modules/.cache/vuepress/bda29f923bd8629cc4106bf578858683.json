{"remainingRequest":"/Users/luna/vue-blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/luna/vue-blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/luna/vue-blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/luna/vue-blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/luna/vue-blog/docs/blog/FileUtils.md?vue&type=template&id=8b7c70c2&","dependencies":[{"path":"/Users/luna/vue-blog/docs/blog/FileUtils.md","mtime":1620633036198},{"path":"/Users/luna/vue-blog/node_modules/cache-loader/dist/cjs.js","mtime":1622518572085},{"path":"/Users/luna/vue-blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1622518574150},{"path":"/Users/luna/vue-blog/node_modules/cache-loader/dist/cjs.js","mtime":1622518572085},{"path":"/Users/luna/vue-blog/node_modules/vue-loader/lib/index.js","mtime":1622518574150},{"path":"/Users/luna/vue-blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1622518607775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}